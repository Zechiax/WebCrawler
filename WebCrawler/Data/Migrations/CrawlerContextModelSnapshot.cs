// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebCrawler.Data;

#nullable disable

namespace WebCrawler.Data.Migrations
{
    [DbContext(typeof(CrawlerContext))]
    partial class CrawlerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("TagWebsiteRecord", b =>
                {
                    b.Property<int>("TagsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WebsiteRecordsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TagsId", "WebsiteRecordsId");

                    b.HasIndex("WebsiteRecordsId");

                    b.ToTable("TagWebsiteRecord");
                });

            modelBuilder.Entity("WebCrawler.Models.CrawlInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EntryUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("JobId")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("Periodicity")
                        .HasColumnType("TEXT");

                    b.Property<string>("RegexPattern")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(".*");

                    b.Property<int>("WebsiteRecordId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WebsiteRecordId")
                        .IsUnique();

                    b.ToTable("CrawlInfos");
                });

            modelBuilder.Entity("WebCrawler.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("WebCrawler.Models.WebsiteExecution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CrawlInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Finished")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Started")
                        .HasColumnType("TEXT");

                    b.Property<string>("WebsiteGraph")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CrawlInfoId")
                        .IsUnique();

                    b.ToTable("Executions");
                });

            modelBuilder.Entity("WebCrawler.Models.WebsiteRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WebsiteRecord");
                });

            modelBuilder.Entity("TagWebsiteRecord", b =>
                {
                    b.HasOne("WebCrawler.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebCrawler.Models.WebsiteRecord", null)
                        .WithMany()
                        .HasForeignKey("WebsiteRecordsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebCrawler.Models.CrawlInfo", b =>
                {
                    b.HasOne("WebCrawler.Models.WebsiteRecord", null)
                        .WithOne("CrawlInfo")
                        .HasForeignKey("WebCrawler.Models.CrawlInfo", "WebsiteRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebCrawler.Models.WebsiteExecution", b =>
                {
                    b.HasOne("WebCrawler.Models.CrawlInfo", null)
                        .WithOne("LastExecution")
                        .HasForeignKey("WebCrawler.Models.WebsiteExecution", "CrawlInfoId");
                });

            modelBuilder.Entity("WebCrawler.Models.CrawlInfo", b =>
                {
                    b.Navigation("LastExecution");
                });

            modelBuilder.Entity("WebCrawler.Models.WebsiteRecord", b =>
                {
                    b.Navigation("CrawlInfo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
